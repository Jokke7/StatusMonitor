{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/CcrCardModels/ccr-card-model.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ccr-card/ccr-card.component.css","webpack:///./src/app/ccr-card/ccr-card.component.html","webpack:///./src/app/ccr-card/ccr-card.component.ts","webpack:///./src/app/ccrcardmodels/ccr-card-model.ts","webpack:///./src/app/customerassets/customerassets.component.html","webpack:///./src/app/customerassets/customerassets.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/installationstatuses/showstatuses.component.html","webpack:///./src/app/installationstatuses/showstatuses.component.ts","webpack:///./src/app/services/statusmonitor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export interface CcrCardModel {\r\n  message: string;\r\n  ccrType: CcrType;\r\n  severityLevel: SeverityLevel;\r\n}\r\n\r\n\r\nexport enum SeverityLevel {\r\n  Informational,\r\n  Warning,\r\n  Immediate,\r\n  Alert\r\n\r\n}\r\n\r\nexport enum CcrType {\r\n  Customer = \"Customer\",\r\n  Certificate = \"Certificates\",\r\n  AppService = \"Application\",\r\n  Database = \"Database\",\r\n  Storage = \"Storage\",\r\n  Misc = \"Other assets\"\r\n}\r\n\r\nexport class CcrUtil {\r\n  public static toString(ct: CcrType) {\r\n    return CcrType[ct];\r\n  }\r\n}\r\n","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  /*.body-content {\\r\\n    padding-top: 50px;\\r\\n  }*/\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4RkFBOEY7RUFDOUY7O0tBRUc7Q0FDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgLyogT24gc21hbGwgc2NyZWVucywgdGhlIG5hdiBtZW51IHNwYW5zIHRoZSBmdWxsIHdpZHRoIG9mIHRoZSBzY3JlZW4uIExlYXZlIGEgc3BhY2UgZm9yIGl0LiAqL1xyXG4gIC8qLmJvZHktY29udGVudCB7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuICB9Ki9cclxufVxyXG4iXX0= */\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <!--<div class='col-sm-3'>\\r\\n      <app-nav-menu></app-nav-menu>\\r\\n    </div>-->\\r\\n    <div class='col-sm-12 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { StatusMonitorService } from './services/statusmonitor.service';\r\nimport { ShowStatusesComponent } from './installationstatuses/showstatuses.component';\r\nimport { CustomerAssetsComponent } from './customerassets/customerassets.component';\r\nimport { CcrCardComponent } from './ccr-card/ccr-card.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ShowStatusesComponent,\r\n    CustomerAssetsComponent,\r\n    CcrCardComponent,\r\n    HeaderComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: 'show-statuses', pathMatch: 'full' },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'show-statuses', component: ShowStatusesComponent },\r\n      { path: 'update-statuses', component: ShowStatusesComponent },\r\n      //{ path: 'customer-assets', component: CustomerAssetsComponent },\r\n      { path: '**', redirectTo: 'home' }\r\n    ])\r\n  ],\r\n  providers: [ StatusMonitorService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"/*:root {\\r\\n  --rusty-orange: #ed7314;\\r\\n  --raisin-black: #291f1e;\\r\\n  --queen-blue: #477998;\\r\\n  --moss-green: #c4d6b0;\\r\\n  --olive-drab: #3d3522;\\r\\n}*/\\r\\n\\r\\n:host {\\r\\n  display: block;\\r\\n  padding: 0;\\r\\n  padding-bottom: 0;\\r\\n  margin-bottom: 10px;\\r\\n  /*border-top: 6px solid green;*/\\r\\n  border-top: 6px solid green;\\r\\n  border-bottom: 1px double black;\\r\\n}\\r\\n\\r\\n:host(.warning) {\\r\\n  border-top: 6px solid #dfd706;\\r\\n  /*border-bottom: 6px solid #dfd706;*/\\r\\n}\\r\\n\\r\\n:host(.immediate) {\\r\\n  border-top: 6px solid orange;\\r\\n  /*border-bottom: 6px solid orange;*/\\r\\n}\\r\\n\\r\\n:host(.alert1) {\\r\\n  border-top: 6px solid red;\\r\\n  /*border-bottom: 6px solid red;*/\\r\\n}\\r\\n\\r\\n.content {\\r\\n  /*border-right: 10pt solid black;*/\\r\\n  font-family: 'Segoe UI';\\r\\n  font-size: small;\\r\\n  margin: 0 auto;\\r\\n  width: 100%;\\r\\n\\r\\n  /*text-align: left !important;\\r\\n  align-content: flex-start;\\r\\n  align-items: flex-start;*/\\r\\n  position: relative;\\r\\n  left: 10px;\\r\\n  /*max-width: 400px;*/\\r\\n}\\r\\n\\r\\n.field {\\r\\n  width: 60px !important;\\r\\n  max-width: 60px !important;\\r\\n  float: left;\\r\\n  padding: 10px;\\r\\n  position:relative;\\r\\n  background-color: #6eb8f8;\\r\\n  border-left: 10px solid green;\\r\\n  border-right: 1px double black;\\r\\n  color: white;\\r\\n  font-size:x-small;\\r\\n  font-weight:500;\\r\\n  text-align: center;\\r\\n  grid-area: left;\\r\\n}\\r\\n\\r\\n/*.field .fieldDesc{\\r\\n  position: absolute;\\r\\n  top: 70px;\\r\\n  left: 10px;\\r\\n\\r\\n}*/\\r\\n\\r\\n@media screen and (max-width: 1000px) {\\r\\n  .content {\\r\\n    font-size: large;\\r\\n  }\\r\\n  .fieldDesc{\\r\\n    font-size:small;\\r\\n  }\\r\\n}\\r\\n\\r\\n.field > img {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  text-align: center;\\r\\n  width: 50%;\\r\\n  height: 30px;\\r\\n  /*max-width: 45px !important;*/\\r\\n  margin: 10px;\\r\\n  padding-left: 2px;\\r\\n}\\r\\n\\r\\n.warning {\\r\\n  border-left: 10px solid #dfd706;\\r\\n  list-style-image: url('li-el-warn.png');\\r\\n}\\r\\n\\r\\n.immediate {\\r\\n  border-left: 10px solid orange;\\r\\n  list-style-image: url('li-el-imd.png');\\r\\n}\\r\\n\\r\\n.alert1 {\\r\\n  border-left: 10px solid red;\\r\\n  list-style-image: url('li-el-alrt.png');\\r\\n}\\r\\n\\r\\n.content > ul {\\r\\n  text-align: left !important;\\r\\n  padding-left: 0;\\r\\n  list-style-image: url('li-el-info.png');\\r\\n  min-width: 100% !important;\\r\\n}\\r\\n\\r\\nli:nth-child(2) {\\r\\n  list-style-image: url('li-el-alrt.png');\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2NyLWNhcmQvY2NyLWNhcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7O0FBRUg7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtFQUM1QixnQ0FBZ0M7Q0FDakM7O0FBRUQ7RUFDRSw4QkFBOEI7RUFDOUIscUNBQXFDO0NBQ3RDOztBQUVEO0VBQ0UsNkJBQTZCO0VBQzdCLG9DQUFvQztDQUNyQzs7QUFFRDtFQUNFLDBCQUEwQjtFQUMxQixpQ0FBaUM7Q0FDbEM7O0FBSUQ7RUFDRSxtQ0FBbUM7RUFDbkMsd0JBQXdCO0VBQ3hCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsWUFBWTs7RUFFWjs7NEJBRTBCO0VBQzFCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gscUJBQXFCO0NBQ3RCOztBQUVEO0VBQ0UsdUJBQXVCO0VBQ3ZCLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1osY0FBYztFQUNkLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIsOEJBQThCO0VBQzlCLCtCQUErQjtFQUMvQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0NBQ2pCOztBQUVEOzs7OztHQUtHOztBQUVIO0VBQ0U7SUFDRSxpQkFBaUI7R0FDbEI7RUFDRDtJQUNFLGdCQUFnQjtHQUNqQjtDQUNGOztBQUVEO0VBQ0UsY0FBYztFQUNkLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGFBQWE7RUFDYiwrQkFBK0I7RUFDL0IsYUFBYTtFQUNiLGtCQUFrQjtDQUNuQjs7QUFHRDtFQUNFLGdDQUFnQztFQUNoQyx3Q0FBeUQ7Q0FDMUQ7O0FBRUQ7RUFDRSwrQkFBK0I7RUFDL0IsdUNBQXdEO0NBQ3pEOztBQUVEO0VBQ0UsNEJBQTRCO0VBQzVCLHdDQUF5RDtDQUMxRDs7QUFFRDtFQUNFLDRCQUE0QjtFQUM1QixnQkFBZ0I7RUFDaEIsd0NBQXlEO0VBQ3pELDJCQUEyQjtDQUM1Qjs7QUFHRDtFQUNFLHdDQUF5RDtDQUMxRCIsImZpbGUiOiJzcmMvYXBwL2Njci1jYXJkL2Njci1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKjpyb290IHtcclxuICAtLXJ1c3R5LW9yYW5nZTogI2VkNzMxNDtcclxuICAtLXJhaXNpbi1ibGFjazogIzI5MWYxZTtcclxuICAtLXF1ZWVuLWJsdWU6ICM0Nzc5OTg7XHJcbiAgLS1tb3NzLWdyZWVuOiAjYzRkNmIwO1xyXG4gIC0tb2xpdmUtZHJhYjogIzNkMzUyMjtcclxufSovXHJcblxyXG46aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcGFkZGluZzogMDtcclxuICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIC8qYm9yZGVyLXRvcDogNnB4IHNvbGlkIGdyZWVuOyovXHJcbiAgYm9yZGVyLXRvcDogNnB4IHNvbGlkIGdyZWVuO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBkb3VibGUgYmxhY2s7XHJcbn1cclxuXHJcbjpob3N0KC53YXJuaW5nKSB7XHJcbiAgYm9yZGVyLXRvcDogNnB4IHNvbGlkICNkZmQ3MDY7XHJcbiAgLypib3JkZXItYm90dG9tOiA2cHggc29saWQgI2RmZDcwNjsqL1xyXG59XHJcblxyXG46aG9zdCguaW1tZWRpYXRlKSB7XHJcbiAgYm9yZGVyLXRvcDogNnB4IHNvbGlkIG9yYW5nZTtcclxuICAvKmJvcmRlci1ib3R0b206IDZweCBzb2xpZCBvcmFuZ2U7Ki9cclxufVxyXG5cclxuOmhvc3QoLmFsZXJ0MSkge1xyXG4gIGJvcmRlci10b3A6IDZweCBzb2xpZCByZWQ7XHJcbiAgLypib3JkZXItYm90dG9tOiA2cHggc29saWQgcmVkOyovXHJcbn1cclxuXHJcblxyXG5cclxuLmNvbnRlbnQge1xyXG4gIC8qYm9yZGVyLXJpZ2h0OiAxMHB0IHNvbGlkIGJsYWNrOyovXHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSSc7XHJcbiAgZm9udC1zaXplOiBzbWFsbDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgLyp0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XHJcbiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsqL1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBsZWZ0OiAxMHB4O1xyXG4gIC8qbWF4LXdpZHRoOiA0MDBweDsqL1xyXG59XHJcblxyXG4uZmllbGQge1xyXG4gIHdpZHRoOiA2MHB4ICFpbXBvcnRhbnQ7XHJcbiAgbWF4LXdpZHRoOiA2MHB4ICFpbXBvcnRhbnQ7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmViOGY4O1xyXG4gIGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkIGdyZWVuO1xyXG4gIGJvcmRlci1yaWdodDogMXB4IGRvdWJsZSBibGFjaztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOngtc21hbGw7XHJcbiAgZm9udC13ZWlnaHQ6NTAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBncmlkLWFyZWE6IGxlZnQ7XHJcbn1cclxuXHJcbi8qLmZpZWxkIC5maWVsZERlc2N7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNzBweDtcclxuICBsZWZ0OiAxMHB4O1xyXG5cclxufSovXHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcclxuICAuY29udGVudCB7XHJcbiAgICBmb250LXNpemU6IGxhcmdlO1xyXG4gIH1cclxuICAuZmllbGREZXNje1xyXG4gICAgZm9udC1zaXplOnNtYWxsO1xyXG4gIH1cclxufVxyXG5cclxuLmZpZWxkID4gaW1nIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIC8qbWF4LXdpZHRoOiA0NXB4ICFpbXBvcnRhbnQ7Ki9cclxuICBtYXJnaW46IDEwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbn1cclxuXHJcblxyXG4ud2FybmluZyB7XHJcbiAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgI2RmZDcwNjtcclxuICBsaXN0LXN0eWxlLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9nZngvbGktZWwtd2Fybi5wbmcnKTtcclxufVxyXG5cclxuLmltbWVkaWF0ZSB7XHJcbiAgYm9yZGVyLWxlZnQ6IDEwcHggc29saWQgb3JhbmdlO1xyXG4gIGxpc3Qtc3R5bGUtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL2dmeC9saS1lbC1pbWQucG5nJyk7XHJcbn1cclxuXHJcbi5hbGVydDEge1xyXG4gIGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkIHJlZDtcclxuICBsaXN0LXN0eWxlLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9nZngvbGktZWwtYWxydC5wbmcnKTtcclxufVxyXG5cclxuLmNvbnRlbnQgPiB1bCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmctbGVmdDogMDtcclxuICBsaXN0LXN0eWxlLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9nZngvbGktZWwtaW5mby5wbmcnKTtcclxuICBtaW4td2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbmxpOm50aC1jaGlsZCgyKSB7XHJcbiAgbGlzdC1zdHlsZS1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvZ2Z4L2xpLWVsLWFscnQucG5nJyk7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"\\r\\n<div *ngIf=\\\"fieldText !='Application'\\\" gdAreas=\\\"field content\\\"\\r\\n     gdGap=\\\"4px\\\"\\r\\n     gdRows=\\\"auto\\\"\\r\\n     gdCols=\\\" 25% 75%\\\">\\r\\n\\r\\n  <div gdArea=\\\"field\\\" [ngClass]=\\\"setFieldStyle()\\\">\\r\\n    <img [src]=\\\"fieldIconUri\\\" alt=\\\"fieldIcon\\\" />\\r\\n    <div class=\\\"fieldDesc\\\">{{ccr.ccrType}}</div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Customer'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>{{ ccr.Description }}</li>\\r\\n      <li>{{ ccr.CustomerId }}</li>\\r\\n      <li>{{ ccr.PlantName }} </li>\\r\\n      <li>{{ ccr.LastUpdate | date: shortTime }}</li>\\r\\n      <li>{{ ccr.Environment }}</li>\\r\\n    </ul>\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Application'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>{{ ccr.ApplicationName }}</li>\\r\\n      <li>{{ ccr.ApplicationInfo | slice:0:contentViewLimit}}</li>\\r\\n      <li>{{ ccr.ApplicationVersion }}</li>\\r\\n      <li>{{ ccr.LicenceExpiryDate }}</li>\\r\\n      <li>{{ ccr.ApplicationServiceLevel }}</li>\\r\\n      <li>{{ ccr.ApplicationServiceHealth }}</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Certificates'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>{{ ccr.SslFriendlyName }}</li>\\r\\n      <li>{{ ccr.SslExpiryDate | date: shortTime }}</li>\\r\\n      <li>{{ ccr.SslStatus }}</li>\\r\\n    </ul>\\r\\n    <br />\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Storage'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>{{ ccr.StorageBlobNFiles }}</li>\\r\\n      <li>{{ ccr.StorageBlobSizeMb }}</li>\\r\\n      <li>{{ ccr.StorageServiceLevel }}</li>\\r\\n    </ul>\\r\\n    <br />\\r\\n    <br />\\r\\n    <br />\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Database'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>Name: {{ ccr.DatabaseName }}</li>\\r\\n      <li>Server: {{ ccr.DatabaseServer }}</li>\\r\\n      <li>Version: {{ ccr.DatabaseVersion }}</li>\\r\\n      <li>Template: {{ ccr.DatabaseTemplate }}</li>\\r\\n      <li>Size(MB): {{ ccr.DatabaseSize }}</li>\\r\\n      <li>Service Level : {{ ccr.DatabaseServiceLevel }}</li>\\r\\n    </ul> \\r\\n  </div>\\r\\n\\r\\n  <!--<div *ngIf=\\\"ccr.ccrType=='Database'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <br /> Name: {{ ccr.DatabaseName }}\\r\\n    <br /> Server: {{ ccr.DatabaseServer }}\\r\\n    <br /> Version: {{ ccr.DatabaseVersion }}\\r\\n    <br /> Template: {{ ccr.DatabaseTemplate }}\\r\\n    <br /> Size(MB): {{ ccr.DatabaseSizeMb }} dfdf\\r\\n    <br /> Service Level : {{ ccr.DatabaseServiceLevel }}\\r\\n  </div>-->\\r\\n\\r\\n  <div *ngIf=\\\"ccr.ccrType=='Other assets'\\\" gdArea=\\\"content\\\" class=\\\"content\\\">\\r\\n    <ul class=\\\"square\\\">\\r\\n      <li>Pdf-tron: Disabled</li>\\r\\n      <li>3D-viewer: Disabled</li>\\r\\n    </ul>\\r\\n    <br /> <br /> <br /> <br />\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Input, HostBinding } from '@angular/core';\r\nimport { CcrCardModel, CcrType, SeverityLevel, CcrUtil } from '../ccrcardmodels/ccr-card-model';\r\nimport { DatabaseProps } from '../ccrcardmodels/database-card-model';\r\nimport { ApplicationProps } from '../ccrcardmodels/application-card-model';\r\nimport { CertificateProps } from '../ccrcardmodels/certificate-card-model';\r\nimport { CustomerProps } from '../ccrcardmodels/customer-card-model';\r\nimport { StorageProps } from '../ccrcardmodels/storage-card-model';\r\nimport { MiscProps } from '../ccrcardmodels/misc-card-model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ccr-card',\r\n  templateUrl: './ccr-card.component.html',\r\n  styleUrls: ['./ccr-card.component.css']\r\n})\r\nexport class CcrCardComponent implements OnInit {\r\n  public severityLevel: SeverityLevel;\r\n  public ccrType: CcrType;\r\n  @Input() ccr: CcrCardModel;\r\n  public fieldIconUri: string;\r\n  contentViewLimit: number;\r\n  \r\n\r\n  static readonly fieldIconPath : string = \"../../assets/icons/\"\r\n\r\n  constructor() {\r\n    this.fieldIconUri = \"\";\r\n    this.contentViewLimit = 20;\r\n  }\r\n\r\n  @HostBinding('class.alert1') someField: boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.ccrType = this.ccr.ccrType;\r\n    this.someField = true;\r\n    this.setCcrField();\r\n    console.log(\"fieldicon \" + this.fieldIconUri);\r\n    //this.fieldText = CcrUtil.toString(this.ccr.ccrType);\r\n\r\n  }\r\n\r\n  setFieldStyle()\r\n  {\r\n    return {\r\n      field: true,\r\n      warning: this.severityLevel == SeverityLevel.Warning,\r\n      immediate: this.severityLevel == SeverityLevel.Immediate,\r\n      alert1: this.severityLevel == SeverityLevel.Alert\r\n    }\r\n  }\r\n\r\n\r\n  private setCcrField() {\r\n    var path = CcrCardComponent.fieldIconPath;\r\n    var file = \"ssl.svg\"\r\n    switch (this.ccrType) {\r\n      case CcrType.AppService:\r\n        file = \"web-app.svg\";\r\n        this.severityLevel = SeverityLevel.Warning;\r\n        break;\r\n      case CcrType.Certificate:\r\n        file = \"ssl.svg\";\r\n        break;\r\n      case CcrType.Customer:\r\n        file = \"customer.svg\";\r\n        break;\r\n      case CcrType.Storage:\r\n        file = \"storage.svg\";\r\n        this.severityLevel = SeverityLevel.Alert;\r\n        break;\r\n      case CcrType.Database:\r\n        file = \"database.svg\"\r\n        break;\r\n      default:\r\n        file = \"other-assets.svg\";\r\n        this.severityLevel = SeverityLevel.Immediate;\r\n        break;\r\n    }\r\n    this.fieldIconUri = path.concat(file);\r\n  }\r\n\r\n\r\n  \r\n}\r\n","export interface CcrCardModel {\r\n  message: string;\r\n  ccrType: CcrType;\r\n  severityLevel: SeverityLevel;\r\n}\r\n\r\n\r\nexport enum SeverityLevel {\r\n  Informational,\r\n  Warning,\r\n  Immediate,\r\n  Alert\r\n\r\n}\r\n\r\nexport enum CcrType {\r\n  Customer = \"Customer\",\r\n  Certificate = \"Certificates\",\r\n  AppService = \"Application\",\r\n  Database = \"Database\",\r\n  Storage = \"Storage\",\r\n  Misc = \"Other assets\"\r\n}\r\n\r\nexport class CcrUtil {\r\n  public static toString(ct: CcrType) {\r\n    return CcrType[ct];\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"header-container\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\"\\r\\n       fxLayout.lt-sm=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"0px\\\"\\r\\n       fxLayoutAlign=\\\"flex-start\\\">\\r\\n\\r\\n    <app-header fxFlex=\\\"calc(50%)\\\">\\r\\n      fxFlex.lt-sm=\\\"100%\\\">\\r\\n    </app-header>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { StatusMonitorService } from '../services/statusmonitor.service';\r\n\r\n@Component({\r\n  selector: 'customer-assets',\r\n  templateUrl: './customerassets.component.html'\r\n})\r\n\r\nexport class CustomerAssetsComponent {\r\n  public customerAssetList: CustomerAssetsData[];\r\n\r\n  constructor(public http: HttpClient, private _router: Router, private _statusMonitorService: StatusMonitorService) {\r\n    this.getCustomerAssets();\r\n  }\r\n\r\n  getCustomerAssets() {\r\n    this._statusMonitorService.getCustomers()\r\n      .subscribe((data: CustomerAssetsData[]) => this.customerAssetList = data);\r\n  }\r\n}\r\n\r\nexport interface CustomerAssetsData {\r\n  statusId: number;\r\n  plantName: string;\r\n  lastUpdate: Date;\r\n  customerId: number;\r\n  description: string;\r\n  environment: string;\r\n  applicationName: string;\r\n  applicationInfo: string;\r\n  applicationVersion: string;\r\n  licenceExpiryDate: string;\r\n  applicationSH: string;\r\n  sslName: string;\r\n  sslExpiryDate: Date;\r\n  sslStatus: string;\r\n  storageBlobNFiles: number;\r\n  storageBlobSizeMb: number;\r\n  storageSL: string;\r\n  storageSH: string;\r\n  databaseName: string;\r\n  databaseServer: string;\r\n  databaseVersion: string;\r\n  databaseTemplate: string;\r\n  databaseSizeMb: number;\r\n  databaseSL: string;\r\n  databaseSH: string;\r\n}\r\n","module.exports = \":host {\\r\\n  display: block;\\r\\n  padding: 0px;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  background-color: #fcf3d9;\\r\\n  border-bottom: 1px solid #f09f02;\\r\\n  padding-left: 30px;\\r\\n  margin-bottom: 10px;\\r\\n  height: 50px;\\r\\n}\\r\\n\\r\\n.left-top {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  grid-area: left;\\r\\n  line-height: 10px;\\r\\n}\\r\\n\\r\\n.right-bottom {\\r\\n  grid-area: right;\\r\\n  display: flex;\\r\\n  background-color: #f09f02;\\r\\n  color: white;\\r\\n  align-items: center;\\r\\n\\r\\n}\\r\\n\\r\\n.right-bottom > img {\\r\\n    height: 1.5em;\\r\\n    width: 2.5em;\\r\\n    margin-left: 5px;\\r\\n  }\\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGFBQWE7Q0FDZDs7QUFFRDtFQUNFLDBCQUEwQjtFQUMxQixpQ0FBaUM7RUFDakMsbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLGdCQUFnQjtFQUNoQixrQkFBa0I7Q0FDbkI7O0FBRUQ7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixhQUFhO0VBQ2Isb0JBQW9COztDQUVyQjs7QUFFQztJQUNFLGNBQWM7SUFDZCxhQUFhO0lBQ2IsaUJBQWlCO0dBQ2xCIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBhZGRpbmc6IDBweDtcclxufVxyXG5cclxuLmhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjNkOTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YwOWYwMjtcclxuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbi5sZWZ0LXRvcCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdyaWQtYXJlYTogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxufVxyXG5cclxuLnJpZ2h0LWJvdHRvbSB7XHJcbiAgZ3JpZC1hcmVhOiByaWdodDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMDlmMDI7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG59XHJcblxyXG4gIC5yaWdodC1ib3R0b20gPiBpbWcge1xyXG4gICAgaGVpZ2h0OiAxLjVlbTtcclxuICAgIHdpZHRoOiAyLjVlbTtcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4iXX0= */\"","module.exports = \"<div gdAreas=\\\"header1 header2\\\"\\r\\n     gdGap=\\\"0px\\\"\\r\\n     gdCols=\\\" auto auto\\\">\\r\\n\\r\\n  <div gdArea=\\\"header1\\\" class=\\\"header left-top\\\">\\r\\n    <img src=\\\"../../assets/gfx/vnLogo.png\\\" alt=\\\"Visionova Logo\\\" style=\\\"height:30px\\\" />\\r\\n  </div>\\r\\n  <div gdArea=\\\"header2\\\" class=\\\"header right-bottom\\\">\\r\\n    Valid CCR <img src=\\\"../../assets/icons/heart-rate.svg\\\" alt=\\\"Alternate Text\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<customer-assets></customer-assets>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core'; \r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"<div id=\\\"header-container\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\"\\r\\n       fxLayout.lt-sm=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"0px\\\"\\r\\n       fxLayoutAlign=\\\"flex-start\\\">\\r\\n\\r\\n    <app-header fxFlex=\\\"calc(50%)\\\">\\r\\n\\r\\n      <!--fxFlex.lt-lg=\\\"0 1 calc(33.33%)\\\"\\r\\n      fxFlex.lt-md=\\\"0 1 calc(50%)\\\"-->\\r\\n      fxFlex.lt-sm=\\\"100%\\\">\\r\\n    </app-header>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--<p *ngIf=\\\"!statusList\\\"><em>Loading...</em></p>-->\\r\\n<!--<p>\\r\\n  <a [routerLink]=\\\"['/update-statuses']\\\">Hard Update</a>\\r\\n</p>-->\\r\\n\\r\\n<!--<div *ngFor=\\\"let status of statuses\\\">\\r\\n  Installation and customer<hr />\\r\\n  <br />{{ \\\"linje: \\\" + status.PlantName }}\\r\\n  <br />{{ \\\"linje: \\\" + status.LastUpdate }}\\r\\n  <br />{{ \\\"linje: \\\" + status.CustomerId }}\\r\\n  <br />{{ \\\"linje: \\\" + status.Description }}\\r\\n  <br />{{ \\\"linje: \\\" + status.Environment }}\\r\\n  <br /> Application<hr />   \\r\\n  <br />{{ \\\"linje: \\\" + status.ApplicationName }}\\r\\n  <br />{{ \\\"linje: \\\" + status.ApplicationInfo }}\\r\\n  <br />{{ \\\"linje: \\\" + status.ApplicationVersion }}\\r\\n  <br />{{ \\\"linje: \\\" + status.LicenceExpiryDate }}\\r\\n  <br />{{ \\\"linje: \\\" + status.ApplicationServiceHealth }}\\r\\n  <br /> SSL<hr />           \\r\\n  <br />{{ \\\"linje: \\\" + status.SslFriendlyName }}\\r\\n  <br />{{ \\\"linje: \\\" + status.SslExpiryDate }}\\r\\n  <br />{{ \\\"linje: \\\" + status.SslStatus }}\\r\\n  <br /> Storage <hr />      \\r\\n  <br />{{ \\\"linje: \\\" + status.StorageBlobNFiles }}\\r\\n  <br />{{ \\\"linje: \\\" + status.StorageBlobSizeMb }}\\r\\n  <br />{{ \\\"linje: \\\" + status.StorageServiceLevel }}\\r\\n  <br />{{ \\\"linje: \\\" + status.StorageServiceHealth }}\\r\\n  <br /> Database<hr />      \\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseName }}\\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseServer }}\\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseVersion }}\\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseTemplate }}\\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseSizeMb }}\\r\\n  <br />{{ \\\"linje: \\\" + status.DatabaseServiceLevel }}-->\\r\\n\\r\\n<div class=\\\"row-container\\\">\\r\\n  <div fxLayout=\\\"row wrap\\\"\\r\\n       fxLayout.lt-sm=\\\"column\\\"\\r\\n       fxLayoutGap=\\\"0px\\\"\\r\\n       fxLayoutAlign=\\\"flex-start\\\">\\r\\n    <ng-container class=\\\"row\\\" *ngFor=\\\"let card of statusCards\\\">\\r\\n      <app-ccr-card [ccr]=\\\"card\\\"\\r\\n                    fxFlex=\\\"0 1 calc(16.66%)\\\"\\r\\n                    fxFlex.lt-lg=\\\"0 1 calc(33.33%)\\\"\\r\\n                    fxFlex.lt-md=\\\"0 1 calc(50%)\\\"\\r\\n                    fxFlex.lt-sm=\\\"100%\\\"></app-ccr-card>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { StatusMonitorService } from '../services/statusmonitor.service';\r\nimport { CcrCardComponent } from '../ccr-card/ccr-card.component';\r\nimport { DatabaseProps } from '../CcrCardModels/database-card-model';\r\nimport { CcrCardModel, CcrType, SeverityLevel } from '../CcrCardModels/ccr-card-model';\r\nimport { MiscProps } from '../CcrCardModels/misc-card-model';\r\nimport { ApplicationProps } from '../CcrCardModels/application-card-model';\r\nimport { CertificateProps } from '../CcrCardModels/certificate-card-model';\r\nimport { StorageProps } from '../CcrCardModels/storage-card-model';\r\nimport { CustomerProps } from '../CcrCardModels/customer-card-model';\r\n\r\nexport interface StatusMonitorData {\r\n  StatusId: string;\r\n  PlantName: string;\r\n  LastUpdate: Date;\r\n  //CustomerId: number;\r\n  Description: string;\r\n  Environment: string;\r\n  ApplicationName: string;\r\n  ApplicationInfo: string;\r\n  ApplicationVersion: string;\r\n  LicenceExpiryDate: Date;\r\n  ApplicationServiceHealth: string;\r\n  SslName: string;\r\n  SslExpiryDate: Date;\r\n  SslStatus: string;\r\n  StorageBlobNFiles: number;\r\n  StorageBlobSizeMb: number;\r\n  StorageSL: string;\r\n  StorageSH: string;\r\n  DatabaseName: string;\r\n  DatabaseServer: string;\r\n  DatabaseVersion: string;\r\n  DatabaseTemplate: string;\r\n  DatabaseSizeMb: number;\r\n  DatabaseServiceLevel: string;\r\n  DatabaseSH: string;\r\n}\r\n\r\n@Component({\r\n  templateUrl: './showstatuses.component.html'\r\n})\r\n\r\nexport class ShowStatusesComponent implements OnInit{\r\n  public statuses: StatusMonitorData[];\r\n  public databaseCcr;\r\n  public customerCcr;\r\n  public statusCards: Array<CcrCardModel>;\r\n\r\n  constructor(public http: HttpClient, private _router: Router, private _statusMonitorService: StatusMonitorService) {\r\n    this.statusCards = new Array<CcrCardModel>();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStatuses();\r\n  }\r\n\r\n  getStatuses() {\r\n    this._statusMonitorService.getAllStatuses()\r\n      .subscribe((data: StatusMonitorData[]) => {\r\n        this.statuses = data;\r\n        this.setCcrCards();\r\n      })\r\n    \r\n  }\r\n\r\n  private setCcrCards() {\r\n\r\n    for (let status of this.statuses) {\r\n      var customerCard = {} as CustomerProps;\r\n      var applicationCard = {} as ApplicationProps;\r\n      var databaseCard = {} as DatabaseProps;\r\n      var certificatesCard = {} as CertificateProps;\r\n      var storageCard = {} as StorageProps;\r\n      var miscCard = {} as MiscProps;\r\n      //customerCard.CustomerId = status.CustomerId;\r\n      customerCard.Description = status.Description;\r\n      customerCard.Environment = status.Environment;\r\n      customerCard.LastUpdate = status.LastUpdate;\r\n      customerCard.PlantName = status.PlantName;\r\n      customerCard.ccrType = CcrType.Customer;\r\n      customerCard.severityLevel = SeverityLevel.Immediate;\r\n\r\n      applicationCard.ApplicationName = status.ApplicationName;\r\n      applicationCard.ApplicationInfo = status.ApplicationInfo;\r\n      applicationCard.ApplicationVersion = status.ApplicationVersion;\r\n      applicationCard.ApplicationServiceLevel = \"S1\";\r\n      applicationCard.ApplicationServiceHealth = status.ApplicationServiceHealth;\r\n      applicationCard.ccrType = CcrType.AppService;\r\n      applicationCard.severityLevel = SeverityLevel.Immediate;\r\n\r\n      databaseCard.DatabaseName = status.DatabaseName;\r\n      databaseCard.DatabaseServer = status.DatabaseServer;\r\n      databaseCard.DatabaseServiceLevel = status.DatabaseServiceLevel;\r\n      databaseCard.DatabaseSize = status.DatabaseSizeMb;\r\n      databaseCard.DatabaseTemplate = status.DatabaseTemplate;\r\n      databaseCard.DatabaseVersion = status.DatabaseVersion;\r\n      databaseCard.ccrType = CcrType.Database;\r\n      databaseCard.severityLevel = SeverityLevel.Alert;\r\n\r\n      certificatesCard.SslName = status.SslName;\r\n      certificatesCard.SslExpiryDate = status.SslExpiryDate;\r\n      certificatesCard.SslStatus = status.SslStatus;\r\n      certificatesCard.ccrType = CcrType.Certificate;\r\n      certificatesCard.severityLevel = SeverityLevel.Warning;\r\n\r\n      storageCard.StorageBlobNFiles = status.StorageBlobNFiles;\r\n      storageCard.StorageBlobSizeMb = status.StorageBlobSizeMb;\r\n      storageCard.StorageServiceLevel = status.StorageSL;\r\n      storageCard.StorageServiceHealth = status.StorageSH;\r\n      storageCard.ccrType = CcrType.Storage;\r\n      storageCard.severityLevel = SeverityLevel.Informational;\r\n\r\n      miscCard.ccrType = CcrType.Misc;\r\n      this.statusCards.push(customerCard);\r\n      this.statusCards.push(applicationCard);\r\n      this.statusCards.push(databaseCard);\r\n      this.statusCards.push(certificatesCard);\r\n      this.statusCards.push(storageCard);\r\n      this.statusCards.push(miscCard);\r\n    }\r\n    \r\n  }\r\n\r\n  getCcrCards(): Array<CcrCardModel> {\r\n    return this.statusCards;\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport {throwError as observableThrowError,  Observable} from 'rxjs';\r\n\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport { Injectable, Inject } from '@angular/core'; \r\nimport { HttpClient } from '@angular/common/http' \r\nimport { Router } from '@angular/router'; \r\n \r\n \r\n \r\nimport { StatusMonitorData } from '../installationstatuses/showstatuses.component';\r\nimport { CustomerAssetsData } from '../customerassets/customerassets.component';\r\n   \r\n@Injectable() \r\nexport class StatusMonitorService { \r\n  private appUrl: string = \"\";\r\n  //private statusList: StatusMonitorData[];\r\n   \r\n    constructor(private _http: HttpClient, @Inject('BASE_URL') baseUrl: string) { \r\n      this.appUrl = baseUrl;\r\n    }\r\n\r\n  //getStatusList(): StatusMonitorData[] {\r\n  //  return this.statusList;\r\n  //}\r\n   \r\n    getAllStatuses() : Observable<StatusMonitorData[]>{\r\n      try {\r\n        console.log(\"inside getallstatuses() in service\");\r\n\r\n        return this._http.get<StatusMonitorData[]>(this.appUrl + 'api/Installations/Status/All');\r\n      }\r\n      catch (e) {\r\n        console.log(e.message);\r\n        return Observable.throw(e.message);\r\n      } \r\n    }\r\n\r\n    getCustomers() {\r\n      return this._http.get<CustomerAssetsData[]>(this.appUrl + 'api/Customer/All');\r\n  }  \r\n   \r\n    getCustomerById(id: number) { \r\n      return this._http.get(this.appUrl + \"api/Customer/\" + id).pipe( \r\n            map((response: Response) => response.json()), \r\n            catchError(this.errorHandler),) \r\n    } \r\n   \r\n    updateEmployee(customer) { \r\n      return this._http.put(this.appUrl + 'api/Customer/Edit', customer);\r\n            //.map((response: Response) => response.json()) \r\n            //.catch(this.errorHandler); \r\n    } \r\n   \r\n    deleteEmployee(id) { \r\n      return this._http.delete(this.appUrl + \"api/Customer/Delete/\" + id);\r\n            //.map((response: Response) => response.json()) \r\n            //.catch(this.errorHandler); \r\n    } \r\n   \r\n    errorHandler(error: Response) { \r\n        console.log(error); \r\n        return observableThrowError(error); \r\n    } \r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}